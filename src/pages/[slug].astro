---
export const prerender = true

import Layout from '../layouts/Layout.astro';
import { formatRelative, formatDistanceToNow } from 'date-fns'
import { ptBR } from 'date-fns/locale'
import PageSection from '../components/PageSection.astro';
import { CatsList } from '../components/CatsList';
import { CatTags } from '../components/CatTags';
import type { Cat } from '../../tina/__generated__/types';
import { getAllCats } from '../api/cats';
import { AdoptPatronizeForm, type FormType } from '../components/pages/Cat/AdoptPatronizeForm';
import { Highlight } from '../components/Highlight';
import ShareLinks from '../components/ShareLinks.astro';
import { getCatStringTags } from '../utils/catUtils';

export async function getStaticPaths() {
  const cats = await getAllCats(undefined, { filterUnavailable: false });

  return cats?.map((cat) => ({
    params: { slug: cat.slug },
    props: { cat, cats }
  }))
}

export type Props = {
  cat: Cat;
  cats: Cat[];
}

const { slug } = Astro.params;
const { cat, cats } = Astro.props;
const { name, image, description, birthDate: unformattedBirthDate, rescueDate: unformattedRescueDate, neutered, vaccinated, gender, social, playful, loving, adopted, patronized, passed, condition, coliving, tested } = cat;

const bornAtTheShelter = unformattedBirthDate === unformattedRescueDate;

const today = new Date();
const birthDate = unformattedBirthDate && formatRelative(unformattedBirthDate, today, { locale: ptBR });
const rescueDate = unformattedRescueDate && formatRelative(unformattedRescueDate, today, { locale: ptBR });
const birthDateDistance = unformattedBirthDate && formatDistanceToNow(unformattedBirthDate, { locale: ptBR, addSuffix: true });
const rescueDateDistance = unformattedRescueDate && formatDistanceToNow(unformattedRescueDate, { locale: ptBR, addSuffix: true });

const article = gender === 'female' ? 'a' : 'o';

let status: string;
if(neutered && vaccinated) {
  status = `Estou castrad${article} e vacinad${article}`
} else if (neutered && !vaccinated) {
  status = `Estou castrad${article}, mas nÃ£o vacinad${article}`
} else if (!neutered && vaccinated) {
  status = `Estou vacinad${article}, mas nÃ£o castrad${article}`
} else {
  status = `NÃ£o estou castrad${article} nem vacinad${article}`
}

const startOpenedForm = Astro.url.searchParams.get('form') as FormType || '';
const ogTitle = `Adote${patronized ? ' ' : ' ou apadrinhe'} ${article} ${name}!`;

const shareText = `${ogTitle}
${getCatStringTags(cat)}`;
---
<Layout title={name} og={{ title: ogTitle, description: description, image }}>  
  <PageSection>
    <div class="flex flex-col gap-24">
      <div class="flex flex-col items-center lg:flex-row gap-20 max-w-7xl m-auto">
        <div class="relative w-full md:w-1/2 lg:w-1/3 h-96">
        <div class="motion-preset-expand rounded-xl border-black border-2 w-full h-full overflow-hidden flex items-center justify-center relative">
          {image && (
            <img data-og="image" src={image} alt={name} class:list={["object-cover w-full h-full", { "grayscale": passed }]} transition:name={`picture_${slug}`}/>
          )}
          {adopted && (
            <div class="motion-rotate-loop-6 motion-ease-in-out/rotate motion-duration-1500/rotate motion-translate-y-in-[200%] motion-opacity-in-0 motion-scale-in-[0.5] motion-ease-spring-bouncier motion-delay-300 absolute bottom-14 border-y-2 border-black w-[200%] text-center bg-pink p-4">
              <span class="block text-5xl font-display motion-preset-pop motion-delay-500">ðŸŽ‰ Adotad{article} ðŸŽ‰</span>
            </div>
          )}
          <!-- TODO use in the future <ImageGroup /> -->
          <CatTags cat={cat} type="appearence" class="absolute bottom-4 left-4 motion-preset-slide-right motion-delay-500" />
        </div>
        <ShareLinks class='mt-4 hidden lg:flex' shareText={shareText} catName={name}/>
      </div>
      <div class="flex flex-col gap-4 flex-1">
        <div class="flex gap-4 items-center flex-wrap">
          <h1 data-og="title" class="text-5xl sm:text-7xl bold font-body font-bold motion-preset-slide-down" transition:name={slug || ""}>{name}</h1>
          <div data-og="tags" class="motion-preset-slide-left motion-delay-300">
            <CatTags cat={cat} type="general" />
          </div>
        </div>
        <!-- TODO change to component -->
        {social && playful && loving ? 
          <div class="flex gap-8 gap-y-2 items-center flex-wrap">
            <div class="text-gray-500">
              <span class="">sociÃ¡vel</span>
              <div class="text-xl text-nowrap ">
                <i class:list={["ph-duotone ph-peace inline-block motion-preset-expand motion-delay-100", {"motion-preset-pop text-black !font-bold before:!text-blue before:!opacity-100": ["1", "2", "3"].includes(social) }]}/>
                <i class:list={["ph-duotone ph-peace inline-block motion-preset-expand motion-delay-200", {"motion-preset-pop text-black !font-bold before:!text-blue before:!opacity-100": ["2", "3"].includes(social) }]}/>
                <i class:list={["ph-duotone ph-peace inline-block motion-preset-expand motion-delay-300", {"motion-preset-pop text-black !font-bold before:!text-blue before:!opacity-100": ["3"].includes(social) }]}/>
              </div>
            </div>
            <div class="text-gray-500">
              <span>brincalhÃ£o</span>
              <div class="text-xl text-nowrap">
                <i class:list={["ph-duotone ph-yarn inline-block motion-preset-expand motion-delay-100", {"motion-preset-pop text-black !font-bold before:!text-yellow before:!opacity-100": ["1", "2", "3"].includes(playful) }]}/>
                <i class:list={["ph-duotone ph-yarn inline-block motion-preset-expand motion-delay-200", {"motion-preset-pop text-black !font-bold before:!text-yellow before:!opacity-100": ["2", "3"].includes(playful) }]}/>
                <i class:list={["ph-duotone ph-yarn inline-block motion-preset-expand motion-delay-300", {"motion-preset-pop text-black !font-bold before:!text-yellow before:!opacity-100": ["3"].includes(playful) }]}/>
              </div>
            </div>
            <div class="text-gray-500">
              <span>carente</span>
              <div class="text-xl text-nowrap">
                <i class:list={["ph-duotone ph-heart inline-block motion-preset-expand motion-delay-100", {"motion-preset-pop text-black !font-bold before:!text-pink before:!opacity-100": ["1", "2", "3"].includes(loving) }]}/>
                <i class:list={["ph-duotone ph-heart inline-block motion-preset-expand motion-delay-200", {"motion-preset-pop text-black !font-bold before:!text-pink before:!opacity-100": ["2", "3"].includes(loving) }]}/>
                <i class:list={["ph-duotone ph-heart inline-block motion-preset-expand motion-delay-300", {"motion-preset-pop text-black !font-bold before:!text-pink before:!opacity-100": ["3"].includes(loving) }]}/>
              </div>
            </div>
          </div> : <></>}
        {Boolean(birthDate) && <p>Nasci {bornAtTheShelter ? "no abrigo ": ""}{birthDateDistance} <small>({birthDate}).</small></p>}
        {Boolean(rescueDate && !bornAtTheShelter) && <p>Fui resgatad{article} {rescueDateDistance} <small>({rescueDate}).</small></p>}
        {Boolean(status) && <p>{status}.</p>}
        {Boolean(tested === 'negative') && <p>Fui testad{article} para FIV/FeLV e sou negativ{article}!</p>}
        {typeof coliving !== undefined && <p>{coliving ? "Convivo" : "NÃ£o convivo"} bem com outros gatos{coliving ? "" : ` prefiro ser filh${article} Ãºnico`}.</p>}
        {Boolean(patronized) && <p>JÃ¡ estou apardinhad{article}. ðŸŽ‰</p>}
        <p class="mt-6">{description}</p>
        <ShareLinks class='mt-4 lg:hidden' shareText={ogTitle}/>
      </div>
    </div>
    <div class="max-w-7xl m-auto w-full flex flex-col gap-4">
      {Boolean(!adopted && !passed && condition) && <p class="text-center">No momento <Highlight>estou {condition}</Highlight>, mas logo estarei disponÃ­vel!</p>}
      <AdoptPatronizeForm startOpenedForm={startOpenedForm} catName={name} hideAdoptButton={adopted || passed} hidePatronizeButton={adopted || patronized || passed} client:load />
    </div>
    <div class="flex flex-col gap-2">
      <!-- TODO only show similar cats (check tags) -->
      <h2 class="text-4xl font-body font-bold">Outros</h2>
      <CatsList cats={cats?.filter(cat => cat.slug !== slug)} client:only="solid-js" />
    </div>
  </PageSection>
</Layout>
