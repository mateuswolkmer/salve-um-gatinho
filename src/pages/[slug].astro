---
import Layout from '../layouts/Layout.astro';
import { formatRelative, formatDistanceToNow } from 'date-fns'
import { ptBR } from 'date-fns/locale'
import PageSection from '../components/PageSection.astro';
import { CatsList } from '../components/CatsList';
import { CatTags } from '../components/CatTags';
import type { Cat } from '../../tina/__generated__/types';
import { getAllCats } from '../api/cats';
import { AdoptPatronizeForm, type FormType } from '../components/pages/Cat/AdoptPatronizeForm';

export async function getStaticPaths() {
  const cats = await getAllCats();

  return cats?.map((cat) => ({
    params: { slug: cat.slug },
    props: { cat, cats }
  }))
}

export type Props = {
  cat: Cat;
  cats: Cat[];
}

const { slug } = Astro.params;
const { cat, cats } = Astro.props;
const { name, image, description, birthDate: unformattedBirthDate, rescueDate: unformattedRescueDate, neutered, vaccinated, gender, social, playful, loving, adopted, patronized } = cat;

const bornAtTheShelter = unformattedBirthDate === unformattedRescueDate;

const today = new Date();
const birthDate = unformattedBirthDate && formatRelative(unformattedBirthDate, today, { locale: ptBR });
const rescueDate = unformattedRescueDate && formatRelative(unformattedRescueDate, today, { locale: ptBR });
const birthDateDistance = unformattedBirthDate && formatDistanceToNow(unformattedBirthDate, { locale: ptBR, addSuffix: true });
const rescueDateDistance = unformattedRescueDate && formatDistanceToNow(unformattedRescueDate, { locale: ptBR, addSuffix: true });

const article = gender === 'female' ? 'a' : 'o';

let status: string;
if(neutered && vaccinated) {
  status = `Estou castrad${article} e vacinad${article}`
} else if (neutered && !vaccinated) {
  status = `Estou castrad${article}, mas n√£o vacinad${article}`
} else if (!neutered && vaccinated) {
  status = `Estou vacinad${article}, mas n√£o castrad${article}`
} else {
  status = `N√£o estou castrad${article} nem vacinad${article}`
}

const startOpenedForm = Astro.url.searchParams.get('form') as FormType || '';
---
<Layout title={name} og={{ title: `Adote${patronized ? ' ' : ' ou apadrinhe'} ${article} ${name}!`, description: description, image }}>  
    <PageSection>
      <div class="flex flex-col gap-24">
        <div class="flex flex-col items-center lg:flex-row gap-20 max-w-7xl m-auto">
          <div class="relative w-full md:w-1/2 lg:w-1/3 h-96">
          <div class="motion-preset-expand bg-gray-200 rounded-xl border-black border-2 transition-all w-full h-full overflow-hidden flex items-center justify-center">
            {image && (
              <img data-og="image" src={image} alt={name} class="object-cover w-full h-full" transition:name={`picture_${slug}`}/>
            )}
            <!-- TODO use in the future <ImageGroup /> -->
          </div>
        </div>
        <div class="flex flex-col gap-4 flex-1">
          <div class="flex gap-4 items-center flex-wrap">
            <span data-og="title" class="text-5xl sm:text-7xl bold font-body font-bold motion-preset-slide-down" transition:name={slug || ""}>{name}</span>
            <div data-og="tags" class="motion-preset-slide-left motion-delay-300">
              <CatTags cat={cat} />
            </div>
          </div>
          <!-- TODO change to component -->
          {social && playful && loving ? 
            <div class="flex gap-8 gap-y-2 items-center flex-wrap">
              <div class="text-gray-500">
                <span class="">soci√°vel</span>
                <div class="text-xl text-nowrap ">
                  <i class:list={["ph-duotone ph-cat inline-block motion-preset-expand motion-delay-100", {"motion-preset-pop text-black !font-bold before:!text-blue before:!opacity-100": ["1", "2", "3"].includes(social) }]}/>
                  <i class:list={["ph-duotone ph-cat inline-block motion-preset-expand motion-delay-200", {"motion-preset-pop text-black !font-bold before:!text-blue before:!opacity-100": ["2", "3"].includes(social) }]}/>
                  <i class:list={["ph-duotone ph-cat inline-block motion-preset-expand motion-delay-300", {"motion-preset-pop text-black !font-bold before:!text-blue before:!opacity-100": ["3"].includes(social) }]}/>
                </div>
              </div>
              <div class="text-gray-500">
                <span>brincalh√£o</span>
                <div class="text-xl text-nowrap">
                  <i class:list={["ph-duotone ph-yarn inline-block motion-preset-expand motion-delay-100", {"motion-preset-pop text-black !font-bold before:!text-yellow before:!opacity-100": ["1", "2", "3"].includes(playful) }]}/>
                  <i class:list={["ph-duotone ph-yarn inline-block motion-preset-expand motion-delay-200", {"motion-preset-pop text-black !font-bold before:!text-yellow before:!opacity-100": ["2", "3"].includes(playful) }]}/>
                  <i class:list={["ph-duotone ph-yarn inline-block motion-preset-expand motion-delay-300", {"motion-preset-pop text-black !font-bold before:!text-yellow before:!opacity-100": ["3"].includes(playful) }]}/>
                </div>
              </div>
              <div class="text-gray-500">
                <span>carente</span>
                <div class="text-xl text-nowrap">
                  <i class:list={["ph-duotone ph-heart inline-block motion-preset-expand motion-delay-100", {"motion-preset-pop text-black !font-bold before:!text-pink before:!opacity-100": ["1", "2", "3"].includes(loving) }]}/>
                  <i class:list={["ph-duotone ph-heart inline-block motion-preset-expand motion-delay-200", {"motion-preset-pop text-black !font-bold before:!text-pink before:!opacity-100": ["2", "3"].includes(loving) }]}/>
                  <i class:list={["ph-duotone ph-heart inline-block motion-preset-expand motion-delay-300", {"motion-preset-pop text-black !font-bold before:!text-pink before:!opacity-100": ["3"].includes(loving) }]}/>
                </div>
              </div>
            </div> : <></>}
          {Boolean(birthDate) && <p>Nasci {bornAtTheShelter ? "no abrigo ": ""}{birthDateDistance} <small>({birthDate}).</small></p>}
          {Boolean(rescueDate && !bornAtTheShelter) && <p>Fui resgatad{article} {rescueDateDistance} <small>({rescueDate}).</small></p>}
          {Boolean(status) && <p>{status}.</p>}
          <p>{description}</p>
          {Boolean(patronized) && <p>J√° estou apardinhad{article}. üéâ</p>}
        </div>
      </div>
      <div class="max-w-7xl m-auto w-full">
        <AdoptPatronizeForm startOpenedForm={startOpenedForm} catName={name} hideAdoptButton={adopted} hidePatronizeButton={patronized} client:load />
      </div>
      <div class="flex flex-col gap-2">
        <h2 class="text-4xl font-body font-bold">Outros parecidos</h2>
        <CatsList cats={cats?.filter(cat => cat.slug !== slug)} client:visible />
      </div>
    </div>
  </div>
</Layout>
