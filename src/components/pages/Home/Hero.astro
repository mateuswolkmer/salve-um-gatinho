---
import client from "../../../../tina/__generated__/client";
import type { Cat } from "../../../../tina/__generated__/types";
import { ButtonLink } from "../../Button";
import { CatCard } from "../../CatCard";
import PageSection from "../../PageSection.astro";

type Props = {};

const {} = Astro.props;

const catsResponse = await client.queries.catConnection();

const allCats = catsResponse.data.catConnection.edges?.map((catResponse) => ({
  ...catResponse?.node as Cat
}));

const catsExceptFirsTwo = Array.isArray(allCats) ? allCats.toSpliced(2, 1000) : [];
---
<PageSection class="max-w-[100rem] m-auto">
    <div class="flex content-between gap-4 w-full">
        <div class="flex flex-col gap-8 items-center sm:items-start w-full text-center sm:text-start">
            <h1 class="text-7xl sm:text-8xl md:text-9xl max-w-4xl text-shadow-pink">Eles merecem uma chance de te fazer feliz</h1>
            <ButtonLink href="/gatos" variant="cta">Adote</ButtonLink>
        </div>
        <div class="hidden lg:flex flex-col items-center gap-6">
            <!-- {cats.map(cat => <CatCard transition:name={`cat_${cat.name}`} variant="small" cat={cat} />)} -->
            {catsExceptFirsTwo.map(cat => <CatCard variant="small" cat={cat} />)}
            <ButtonLink href="/gatos" variant="nav">Ver mais</ButtonLink>
        </div>
    </div>
</PageSection>